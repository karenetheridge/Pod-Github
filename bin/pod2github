#!/usr/bin/perl
use 5.008;
use strict;
use warnings;
# PODNAME: pod2github
# ABSTRACT: Make beautiful GitHub readmes from your POD

use Pod::Github;
use Getopt::Long;
use Pod::Usage;

my %command_opts = (
    'help|h'        => sub { pod2usage(1) },
    'usage'         => sub { pod2usage({ -verbose => 0 }) },
    'man|perldoc'   => sub { pod2usage({ -verbose => 2 }) },
    'version'       => sub { print $Pod::Github::VERSION, "\n"; exit 0 },
);

# Enable these features by default
my %opts = (
    'syntax-highlight' => 1,
    'title-case' => 1,
    'shift-headings' => 1,
);

Getopt::Long::Configure(qw(bundling no_auto_abbrev));
GetOptions(\%opts,
    %command_opts,
    'exclude=s',
    'inline=s',
    'header=s',
    'footer=s',
    'header-file=s',
    'footer-file=s',
    'travis',
    'coveralls',
    'title-case!',
    'syntax-highlight!',
    'shift-headings=i',
) or pod2usage(2);

# One ARGV is assumed to be input (with output = STDOUT)
my $in_fh  = get_handle(shift(@ARGV), '<', \*STDIN);
my $out_fh = get_handle(shift(@ARGV), '>', \*STDOUT);
@ARGV == 0 or pod2usage('Too many arguments');

my $parser = Pod::Github->new(%opts);
$parser->output_fh($out_fh);
$parser->parse_file($in_fh);
exit 0;

sub get_handle {
  my ($path, $op, $default) = @_;
  (!defined($path) || $path eq '-') ? $default : do {
    open(my $fh, $op, $path)
      or die "Failed to open '$path': $!\n";
    $fh;
  };
}

__END__

=pod

=encoding UTF-8

=head1 NAME

pod2github - Make pretty GitHub readmes from your POD

=head1 SYNOPSIS

 $ pod2markdown < lib/Foo/Bar.pm > README.md

=head1 DESCRIPTION

This program converts your POD into Markdown, with GitHub-specific formatting
of source code. Because your project's README.md probably diverges from your
POD, C<pod2markdown> offers various other functions:

=over 4

=item *

Improve formatting: syntax-highlight Perl sections, and render command-line
options, methods and functions as code.

=item *

Hide the C<NAME> and C<SYNOPSIS> headers to simplify your POD's introduction

=item *

Title-case the allcaps headers to make them friendlier

=item *

Optionally add Travis, Coveralls status

=item *

Optionally add custom Markdown to the beginning or end of the file

=item *

Exclude or inline arbitrary sections

=back

=head1 OPTIONS

=over

=item 

=back

=head1 AUTHOR

Richard Harris <richardharris@gmail.com>

However the hard work is done by L<Pod::Markdown> by Randy Stauner.

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2017 Richard Harris.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
